import java.awt.Color;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.TexturePaint;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

class Level extends JPanel {
    private Graphics2D surfaceG2D;
    private Graphics2D roverG2D;
    private Graphics2D rocksG2D;
    private BufferedImage surfaceImg;
    private BufferedImage roverImg;
    private BufferedImage rockImg;
    private BufferedImage mineralImg;
    private TexturePaint  surfacetp;
    private TexturePaint  rovertp;
    private TexturePaint  rocktp;
    private TexturePaint  mineraltp;
    
    private static int MAX_ROWS    = 15;
    private static int MAX_COLUMNS = 15;
    
    private static int TILE_SIZE   = 50;

    private int roverX = 0;
    private int roverY = 0;
    public Level()
    {
        //Initialise Surface by loading textures
        try 
        {
            surfaceImg = ImageIO.read(new File("surface.jpg"));
            roverImg   = ImageIO.read(new File("rover.png"));
            rockImg    = ImageIO.read(new File("rock.png"));
            mineralImg = ImageIO.read(new File("mineral.png"));
        } catch (IOException ex) {
            //Break, I guess
        }
    }
    private void doDrawing(Graphics g)    
    {
        Graphics2D surfaceG2D = (Graphics2D) g.create();
        Rectangle tile = new Rectangle(0,0,TILE_SIZE,TILE_SIZE);        
        surfaceG2D.drawString("Java 2D", 10, 10);        
        surfacetp = new TexturePaint(surfaceImg, tile);
        surfaceG2D.setPaint(surfacetp);
        for(int i = 0; i < MAX_ROWS; i++)
        {
            for(int j = 0; j < MAX_COLUMNS; j++)
            {
                surfaceG2D.fillRect(i*TILE_SIZE, j*TILE_SIZE, TILE_SIZE, TILE_SIZE);
            }
        }
        
        //Add rocks
        Graphics2D rockG2D = (Graphics2D) g.create();        
        rocktp = new TexturePaint(rockImg, tile);
        rockG2D.setPaint(rocktp);
        for(int i = 0; i < MAX_ROWS; i++)
        {
            rockG2D.fillRect(7*TILE_SIZE, i*TILE_SIZE, //x-coord, y-coord
                             TILE_SIZE, TILE_SIZE);              //width, height
        }
        
        mineraltp = new TexturePaint(mineralImg, tile);
        rockG2D.setPaint(mineraltp);
        rockG2D.fillRect(5*TILE_SIZE,5*TILE_SIZE,TILE_SIZE,TILE_SIZE);
        
        
        //Add rover
        Graphics2D roverG2D = (Graphics2D) g.create();
        Rectangle rover  = new Rectangle(roverX*TILE_SIZE,roverY*TILE_SIZE,TILE_SIZE,TILE_SIZE);
        roverG2D.rotate(Math.toRadians(90), rover.x + rover.width/2, rover.y + rover.height/2);        
        rovertp = new TexturePaint(roverImg, rover);
        roverG2D.setPaint(rovertp);
        roverG2D.fillRect(roverX*TILE_SIZE,roverY*TILE_SIZE,TILE_SIZE,TILE_SIZE);
    }
    @Override
    public void paintComponent(Graphics g) 
    {
        super.paintComponent(g);
        doDrawing(g);
    }
    
    public void moveRover(int x, int y)
    {
        roverX += x;
        roverY += y;
        //roverG2D.repaint();
    }
    public void UserCode()
    {
        //User can only edit here
    }
}
