#BlueJ class context
comment0.target=Level
comment1.params=
comment1.target=Level\ getLevel()
comment1.text=\r\n\ Factory\ method\ to\ get\ the\ canvas\ singleton\ object.\r\n
comment10.params=level
comment10.target=void\ loadFrames(int)
comment10.text=\r\n\ Runs\ the\ user's\ code\ to\ generate\ a\ list\ of\ frames\ for\ the\ simulation\r\n\ Unfortunately\ hardcoded,\ anything\ beyond\ 5-10\ levels\ might\ become\ messy\r\n\ \r\n\ @param\ level\ Level\ number,\ indicating\ which\ file\ to\ run\r\n
comment11.params=g
comment11.target=void\ paintComponent(java.awt.Graphics)
comment11.text=\r\n\ Overrides\ the\ default\ Graphics2D\ paintComponent()\ method,\ to\ ensure\r\n\ the\ custom\ doDrawing()\ method\ is\ always\ invoked\ after\ superclass\ method\r\n\ \r\n\ @param\ g\ Graphics\ reference\r\n
comment12.params=level
comment12.target=void\ reset(int)
comment12.text=\r\n\ Resets\ the\ level,\ ready\ for\ a\ new\ simulation.\r\n
comment2.params=
comment2.target=Level()
comment2.text=\r\n\ Level\ Constructor\ initialises\ the\ texture\ paints\ into\ the\ arraylist\r\n
comment3.params=g
comment3.target=void\ doDrawing(java.awt.Graphics)
comment3.text=\r\n\ Draws\ the\ level\ to\ the\ canvas,\ may\ be\ recalled\ periodically.\r\n\ Usually\ invoked\ via\ the\ overriden\ paintComponent(Graphics\ g)\ method\r\n\ \r\n\ @param\ g\ Reference\ to\ the\ Graphics\ element\r\n
comment4.params=newFrame
comment4.target=void\ addFrame(java.awt.Point)
comment4.text=\r\n\ Adds\ a\ new\ frame\ to\ the\ simulation\ framelist\r\n\ \r\n\ @param\ newFrame\ The\ point\ data\ signifying\ the\ rover's\ movement\ within\ this\ frame\r\n
comment5.params=
comment5.target=java.awt.Point\ getRoverPos()
comment5.text=\r\n\ Returns\ the\ rover's\ current\ position\r\n\ \r\n\ @return\ the\ rover's\ current\ position\r\n
comment6.params=x\ y
comment6.target=int\ getTile(int,\ int)
comment6.text=\r\n\ Returns\ the\ tile\ type\ at\ the\ specified\ position\r\n\ \r\n\ @param\ x\ x-coordinate\r\n\ @param\ y\ y-coordinate\r\n\ @return\ Tile\ type\ of\ specified\ tile\ as\ an\ integer\r\n
comment7.params=
comment7.target=void\ updateRover()
comment7.text=\r\n\ Updates\ the\ rover's\ position\ within\ the\ tilemap,\ ready\ for\ the\ next\ frame\r\n\ Simulation\ is\ stopped\ if\ the\ rover\ has\ hit\ a\ rock\ or\ gone\ out\ of\ bounds\r\n
comment8.params=level
comment8.target=void\ loadLevel(int)
comment8.text=\r\n\ Loads\ the\ new\ level,\ from\ button\ press.\ \r\n\ \r\n\ Method\ is\ separated\ from\ loadTilemap()\ to\ allow\ future,\ intermediate\ \r\n\ functionality\ to\ be\ added\ without\ issue\r\n\ \r\n\ @param\ level\ \r\n
comment9.params=fileToLoad
comment9.target=void\ loadTilemap(java.io.File)
comment9.text=\r\n\ Loads\ tilemap\ for\ level\ from\ .txt\ file\r\n\ \r\n\ Scans\ each\ tile\ in\ a\ row,\ per\ row\ (left-right,\ top-bottom)\r\n\ This\ should\ not\ need\ any\ future\ modification\ if\ the\ TILE_SIZE\ changes,\r\n\ nor\ if\ new\ tile\ types\ or\ level\ are\ added.\ This\ would\ only\ need\ to\ be\ \r\n\ modified\ should\ the\ level\ file\ format\ change.\r\n\ \r\n\ @param\ fileToLoad\ The\ level\ file\ containing\ the\ tilemap\ data\ to\ load\r\n
numComments=13
